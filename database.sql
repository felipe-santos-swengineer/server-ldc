--CLEAR DB:
DROP TABLE IF EXISTS avaliador_selecionado;
DROP TABLE IF EXISTS atividades_submetidas;
DROP TABLE IF EXISTS avaliacoes;
DROP TABLE IF EXISTS admins;
DROP TABLE IF EXISTS avaliadores;
DROP TABLE IF EXISTS atividades;
DROP TABLE IF EXISTS alunos;
DROP TABLE IF EXISTS alunos_pendentes;


--DB:
CREATE TABLE IF NOT EXISTS alunos(
	id SERIAL NOT NULL,
	nome VARCHAR(200) NOT NULL,
	email VARCHAR(200) NOT NULL,
	senha VARCHAR(50) NOT NULL,
	matricula VARCHAR(50) NOT NULL,
	curso VARCHAR(100) NOT NULL,
	usertoken VARCHAR(100) NOT NULL UNIQUE,
	ativo BOOLEAN NOT NULL DEFAULT TRUE,
	status_entrega VARCHAR(50) NOT NULL DEFAULT FALSE,
	data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS alunos_pendentes(
	id SERIAL NOT NULL,
	nome VARCHAR(200) NOT NULL,
	email VARCHAR(200) NOT NULL,
	senha VARCHAR(50) NOT NULL,
	matricula VARCHAR(50) NOT NULL,
	curso VARCHAR(100) NOT NULL,
	usertoken VARCHAR(100) NOT NULL UNIQUE,
	ativo BOOLEAN NOT NULL DEFAULT TRUE,
	data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS atividades(
	id SERIAL NOT NULL,
	titulo VARCHAR(200) NOT NULL,
	data_inicio VARCHAR(50) NOT NULL,
	data_fim VARCHAR(50) NOT NULL,
	categoria VARCHAR(10) NOT NULL,
	sub_categoria VARCHAR(10) NOT NULL,
	descricao VARCHAR(5000) NOT NULL,
	quantidade_horas VARCHAR(10) NOT NULL,
	usertoken VARCHAR(100) NOT NULL,
	doc_link VARCHAR(1000),
	nome_pdf VARCHAR(1000),
	data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (id),
	FOREIGN KEY (usertoken) REFERENCES alunos (usertoken)
);

CREATE TABLE IF NOT EXISTS avaliadores(
	id SERIAL NOT NULL,
	nome VARCHAR(200) NOT NULL,
	email VARCHAR(200) NOT NULL,
	senha VARCHAR(50) NOT NULL,
	matricula VARCHAR(50) NOT NULL,
	usertoken VARCHAR(100) NOT NULL UNIQUE,
	ativo BOOLEAN NOT NULL DEFAULT TRUE,
	data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS admins(
	id SERIAL NOT NULL,
	email VARCHAR(200) NOT NULL,
	senha VARCHAR(50) NOT NULL,
	usertoken VARCHAR(100) NOT NULL UNIQUE,
	ativo BOOLEAN NOT NULL DEFAULT TRUE,
	data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS avaliacoes(
	id SERIAL NOT NULL,
	token_aluno VARCHAR(100) NOT NULL,
	token_avaliador VARCHAR(100) NOT NULL,
	status VARCHAR(100) NOT NULL,
	data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS atividades_submetidas(
	id SERIAL NOT NULL,
	id_avaliacao SERIAL NOT NULL,
	titulo VARCHAR(200) NOT NULL,
	data_inicio VARCHAR(50) NOT NULL,
	data_fim VARCHAR(50) NOT NULL,
	categoria VARCHAR(10) NOT NULL,
	sub_categoria VARCHAR(10) NOT NULL,
	descricao VARCHAR(5000) NOT NULL,
	quantidade_horas VARCHAR(10) NOT NULL,
	usertoken VARCHAR(100) NOT NULL,
	doc_link VARCHAR(1000),
	nome_pdf VARCHAR(1000),
	horas_validas VARCHAR(10) NOT NULL,
	feedback VARCHAR(4000),
	data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (id),
	FOREIGN KEY (id_avaliacao) REFERENCES avaliacoes (id)
);

CREATE TABLE IF NOT EXISTS avaliador_selecionado(
	id SERIAL NOT NULL,
	id_avaliador_escolhido SERIAL NOT NULL
);

INSERT INTO admins(email, senha, usertoken) VALUES ('admin@gmail.com','admin','sd67d57sadJVv5d7Nva85BFd58FSdaA6c9');